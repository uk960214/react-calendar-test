{"version":3,"sources":["App.elements.js","timeData.js","App.js","reportWebVitals.js","index.js"],"names":["magenta","magentaWithOpacity","CalendarArea","styled","div","MonthChangeArea","MonthChangeButton","button","WeekDaysArea","DatesArea","p","rows","DateItem","day","last","picked","DateNum","props","SelectedDate","TimeBlockSection","section","TimeBlock","timeData","App","today","Date","useState","year","getFullYear","month","getMonth","viewMonth","setMonth","datePick","setDatePick","timePick","setTimePick","viewDates","beginDay","getDay","lastDate","endDay","i","prevDate","push","getDate","currDate","nextDate","dates","map","d","Math","floor","length","date","wDay","onClick","e","handleDatePick","times","timeBlocks","x","handleTimePick","dayOne","toPrevMonth","toNextMonth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6afe0999.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst magenta = \"#9E2B2F\";\r\nconst magentaWithOpacity = \"#9E2B2F55\";\r\n\r\nexport const CalendarArea = styled.div`\r\n  width: 80%;\r\n  margin: auto;\r\n\r\n  & > * {\r\n    margin: 5% 0;\r\n  }\r\n`;\r\n\r\nexport const MonthChangeArea = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const MonthChangeButton = styled.button`\r\n  margin: 0 5%;\r\n\r\n  border: none;\r\n  border-bottom: 1px solid #000000;\r\n  background-color: #00000000;\r\n\r\n  cursor: pointer;\r\n\r\n  font-size: 0.8rem;\r\n\r\n  &:hover {\r\n    color: #cccccc;\r\n    border-bottom: 1px solid #cccccc;\r\n  }\r\n`;\r\n\r\nexport const WeekDaysArea = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n\r\n  text-align: center;\r\n  font-size: 0.8rem;\r\n\r\n  p:first-child {\r\n    color: #ff8d8d;\r\n  }\r\n\r\n  p:last-child {\r\n    color: #56a4ff;\r\n  }\r\n`;\r\n\r\nexport const DatesArea = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  grid-template-rows: ${(p) => `repeat(${p.rows}, 8vh);`};\r\n`;\r\n\r\nexport const DateItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 0.3rem 0.1rem;\r\n\r\n  border-top: 1px solid ${magenta};\r\n  border-right: 1px solid ${magenta};\r\n  ${(p) => (p.day === 0 ? `border-left: 1px solid ${magenta};` : \"\")}\r\n  ${(p) => (p.last ? `border-bottom: 1px solid ${magenta};` : \"\")}\r\n\r\n  position: relative;\r\n\r\n  ${(p) => (p.picked ? `background-color: ${magentaWithOpacity};` : \"\")}\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 5;\r\n  }\r\n`;\r\n\r\nexport const DateNum = styled.p`\r\n  margin-bottom: 5%;\r\n\r\n  color: ${(props) =>\r\n    props.day === 0 ? \"#FF8D8D\" : props.day === 6 ? \"#56A4FF\" : \"#000\"};\r\n  text-align: center;\r\n  font-size: 0.7rem;\r\n`;\r\n\r\nexport const SelectedDate = styled.p`\r\n  text-align: center;\r\n  margin: 3% 0;\r\n`;\r\n\r\nexport const TimeBlockSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const TimeBlock = styled.div`\r\n  border: 1px solid ${magenta};\r\n  width: 70%;\r\n  text-align: center;\r\n  padding: 1vh 0;\r\n  border-radius: 3px;\r\n  margin: 1% auto;\r\n\r\n  ${(p) => (p.picked ? `background-color: ${magentaWithOpacity}` : \"\")}\r\n`;\r\n","export const timeData = {\r\n  \"2021-11-8\": [\r\n    \"10:00-11:00\",\r\n    \"11:00-12:00\",\r\n    \"12:00-13:00\",\r\n    \"13:00-14:00\",\r\n    \"14:00-15:00\",\r\n  ],\r\n  \"2021-11-9\": [\"12:00-13:00\", \"15:00-16:00\", \"17:00-18:00\", \"18:00-19:00\"],\r\n  \"2021-11-10\": [\"13:00-14:00\", \"14:00-15:00\", \"15:00-16:00\", \"18:00-19:00\"],\r\n  \"2021-11-11\": [\r\n    \"10:00-11:00\",\r\n    \"14:00-15:00\",\r\n    \"15:00-16:00\",\r\n    \"17:00-18:00\",\r\n    \"18:00-19:00\",\r\n  ],\r\n  \"2021-11-12\": [\"17:00-18:00\", \"18:00-19:00\"],\r\n};\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\n\nimport {\n  CalendarArea,\n  WeekDaysArea,\n  DatesArea,\n  DateItem,\n  DateNum,\n  MonthChangeArea,\n  MonthChangeButton,\n  TimeBlock,\n  TimeBlockSection,\n  SelectedDate,\n} from \"./App.elements\";\nimport { timeData } from \"./timeData\";\n\nfunction App() {\n  const today = new Date();\n\n  // states\n  const [viewMonth, setMonth] = useState({\n    year: today.getFullYear(),\n    month: today.getMonth(),\n  });\n  const [datePick, setDatePick] = useState();\n  const [timePick, setTimePick] = useState();\n\n  // get dates to show\n  const viewDates = [];\n\n  const firstDate = new Date(viewMonth.year, viewMonth.month, 1);\n  const beginDay = firstDate.getDay();\n\n  const lastDate = new Date(viewMonth.year, viewMonth.month + 1, 0);\n  const endDay = lastDate.getDay();\n\n  for (let i = -1 * beginDay + 1; i <= 0; i++) {\n    let prevDate = new Date(viewMonth.year, viewMonth.month, i);\n    viewDates.push(prevDate);\n  }\n\n  for (let i = 1; i <= lastDate.getDate(); i++) {\n    let currDate = new Date(viewMonth.year, viewMonth.month, i);\n    viewDates.push(currDate);\n  }\n\n  for (let i = 1; endDay + i <= 6; i++) {\n    let nextDate = new Date(\n      viewMonth.year,\n      viewMonth.month,\n      lastDate.getDate() + i\n    );\n    viewDates.push(nextDate);\n  }\n\n  // date pick event\n  const handleDatePick = (date) => {\n    setDatePick(date);\n    setTimePick(null);\n  };\n\n  // create dates\n  const dates = viewDates.map((d, i) => {\n    // 마지막 줄 여부 파악\n    const last =\n      Math.floor(viewDates.length / 7) - 1 === Math.floor(i / 7) ? true : false;\n    let date = `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n    let wDay = d.getDay();\n    return (\n      <DateItem\n        last={last}\n        day={wDay}\n        key={i}\n        picked={date === datePick}\n        onClick={(e) => handleDatePick(date)}\n      >\n        <DateNum day={wDay}>{d.getDate()}</DateNum>\n      </DateItem>\n    );\n  });\n\n  // change months\n\n  const toPrevMonth = () => {\n    const dayOne = new Date(viewMonth.year, viewMonth.month - 1, 1);\n\n    setMonth({ year: dayOne.getFullYear(), month: dayOne.getMonth() });\n  };\n\n  const toNextMonth = () => {\n    const dayOne = new Date(viewMonth.year, viewMonth.month + 1, 1);\n\n    setMonth({ year: dayOne.getFullYear(), month: dayOne.getMonth() });\n  };\n\n  const handleTimePick = (i) => {\n    setTimePick(i);\n  };\n\n  // add time blocks when date picked\n  const dateKey = datePick;\n  const times = timeData[dateKey];\n  let timeBlocks = times\n    ? times.map((x, i) => (\n        <TimeBlock\n          key={i}\n          picked={i === timePick}\n          onClick={(e) => handleTimePick(i)}\n        >\n          {x}\n        </TimeBlock>\n      ))\n    : [];\n\n  return (\n    <>\n      <CalendarArea>\n        <MonthChangeArea>\n          <MonthChangeButton onClick={() => toPrevMonth()}>\n            지난 달\n          </MonthChangeButton>\n          {`${viewMonth.year} . ${viewMonth.month + 1}`}\n          <MonthChangeButton onClick={() => toNextMonth()}>\n            다음 달\n          </MonthChangeButton>\n        </MonthChangeArea>\n        <WeekDaysArea>\n          <p>일</p>\n          <p>월</p>\n          <p>화</p>\n          <p>수</p>\n          <p>목</p>\n          <p>금</p>\n          <p>토</p>\n        </WeekDaysArea>\n        <DatesArea rows={dates.length / 7}>{dates}</DatesArea>\n      </CalendarArea>\n      <TimeBlockSection>\n        <SelectedDate>{datePick}</SelectedDate>\n        {datePick ? timeBlocks : \"\"}\n      </TimeBlockSection>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}